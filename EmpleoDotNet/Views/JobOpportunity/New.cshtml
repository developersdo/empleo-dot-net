@using EmpleoDotNet.Helpers
@using reCAPTCHA.MVC
@model EmpleoDotNet.ViewModel.NewJobOpportunityViewModel

@{
    ViewBag.Title = "Nuevo Empleo";
}
@section styles{
<style>
    #Description {
        height: 200px;
    }
</style>
}

@section scripts {
    <script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?libraries=places"></script>
    <script type="text/javascript">
        
        google.maps.event.addDomListener(window, 'load', function () {
            var places = new google.maps.places.Autocomplete(document.getElementById('location-input'));
            google.maps.event.addListener(places, 'place_changed', function () {
                var place = places.getPlace();
                if (place) {
                    var latitude = place.geometry.location.lat();
                    var longitude = place.geometry.location.lng();
                    var placeId = place.place_id;

                    $('#location-latitude').val(latitude);
                    $('#location-longitude').val(longitude);
                    $('#location-placeid').val(placeId);
                } else {
                    $('#location-input').val('');
                    $('#location-latitude').val('');
                    $('#location-longitude').val('');
                    $('#location-placeid').val('');
                }        
            });
        });
    </script>
}

@using (Html.BeginForm("New", "JobOpportunity", FormMethod.Post, new { role = "form" }))
{
    @Html.AntiForgeryToken()

<div class="container" style="margin-top: 55px;">
    <div class="row">
        @*Job Details*@
        <div class="col-sm-6">
            <h2>Detalles del puesto</h2>
            <div class="form-group" id="job-title-group">
                <label for="Title">Título</label>
                @Html.TextBoxFor(m => m.Title, new { @class = "form-control", placeholder = "ejemp. Web Designer" })
                @Html.ValidationMessageFor(m => m.Title)
            </div>
            <div class="form-group" id="job-location-group">
                <label for="Location">Localidad</label>
                @Html.TextBoxFor(m => m.LocationName, new
                {
                    @class = "form-control",
                    placeholder = "Selecciona una localidad",
                    id = "location-input",
                    autocomplete = "off"
                })
                @Html.HiddenFor(m => m.LocationLatitude, new { id = "location-latitude"})
                @Html.HiddenFor(m => m.LocationLongitude, new { id = "location-longitude" })
                @Html.HiddenFor(m => m.LocationPlaceId, new { id = "location-placeid" })
            </div>
            <div class="form-group" id="job-category-group">
                <label for="Category">Categoría</label>
                @Html.EnumDropListFor(e => e.Category, new { @class = "form-control", id = "category" })
            </div>
            <div class="form-group">
                @Html.CheckBoxFor(m => m.IsRemote)
                <label for="IsRemote">Remoto?</label>
            </div>
        </div>

        @*Company Details*@
        <div class="col-sm-6">
            <h2>Detalles de la Empresa</h2>
            <div class="form-group" id="company-name-group">
                <label for="CompanyName">Nombre de la Empresa</label>
                @Html.TextBoxFor(m => m.CompanyName, new { @class = "form-control", placeholder = "CompanyX, SRL." })
                @Html.ValidationMessageFor(m => m.CompanyName)
            </div>
            <div class="form-group" id="company-email-group">
                <label for="CompanyEmail">Email</label>
                @Html.TextBoxFor(m => m.CompanyEmail, new { @class = "form-control", placeholder = "email@companyx.com" })
                @Html.ValidationMessageFor(m => m.CompanyEmail)
            </div>
            <div class="form-group" id="company-website-group">
                <label for="CompanyUrl">Web Site (Opcional)</label>
                @Html.TextBoxFor(m => m.CompanyUrl, new { @class = "form-control", placeholder = "companyx.com" })
                @Html.ValidationMessageFor(m => m.CompanyUrl)
            </div>
            <div class="form-group" id="company-logo-group">
                <label for="CompanyLogoUrl">Logo (Opcional)</label>
                @Html.TextBoxFor(m => m.CompanyLogoUrl, new { @class = "form-control", placeholder = "http://companyx.com/logo.png" })
                @Html.ValidationMessageFor(m => m.CompanyLogoUrl)
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12">
            <div class="form-group" id="job-description-group">
                <h2>Descripcion del Puesto</h2>
                @Html.TextAreaFor(m => m.Description, new { @class = "form-control textarea" })
                @Html.ValidationMessageFor(m => m.Description)
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12">
            <div class="form-group">
                @Html.Recaptcha()
                @Html.ValidationMessage("ReCaptcha")
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12">
            <button type="submit" class="btn btn-primary btn-lg">Crear Empleo</button>
        </div>
    </div>
</div>
}

