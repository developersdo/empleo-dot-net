@using EmpleoDotNet.Helpers
@model IEnumerable<EmpleoDotNet.Core.Domain.JobOpportunity>

@if (Model != null && Model.Any())
{
    <div class="list-preview">
        @foreach (var jobOpportunity in Model)
        {
            <div class="preview-job">
                <a href="@Url.Action("Detail", "JobOpportunity", new { id = UrlHelperExtensions.SeoUrl(jobOpportunity.Id, jobOpportunity.Title) })" class="featured">
                    <div class="row">
                        <div class="preview-title col-md-4 col-sm-9">
                            <h5>@jobOpportunity.Title</h5>
                            <span class="text-opacity">@jobOpportunity.CompanyName</span>
                        </div>
                        <div class="preview-text col-md-4 col-sm-3">
                            <span class="preview-text-item">

                                @if (jobOpportunity.JobOpportunityLocation == null)
                                {
                                    <strong>N/A</strong>
                                }
                                else
                                {
                                    <strong>@jobOpportunity.JobOpportunityLocation.Name</strong>
                                }
                            </span><br>
                            <span class="text-opacity hidden-xs">@jobOpportunity.Created.ToDominicanFormat()</span>
                        </div>
                        <div class="preview-text col-md-4 hidden-sm hidden-xs">
                            <span class="preview-text-item">@jobOpportunity.Category.ToEnumDescription()</span><br>
                            <span class="text-opacity">Visitas | @jobOpportunity.ViewCount</span>
                        </div>
                    </div>
                    @if (jobOpportunity.IsRemote)
                    {
                        <span class="badge badge-success preview-badge hidden-xs">Remoto</span>

                    }
                </a>
            </div>
        }
    </div>
}
